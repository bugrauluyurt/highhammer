name: build

on:
  workflow_dispatch:
    inputs:
      # Sha: Git sha. If not provided the system will default to the HEAD of the branch
      sha:
        description: 'Sha: Commit sha to build from.'
        required: false
      apps:
        description: 'Apps: (Write a list of apps to build. Ex: ["client-app", "api-core"]). Empty array creates images for all services.'
        default: '[]'
        required: false

jobs:
  set-inputs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.17.0"
      - name: Generate inputs
        id: generate-inputs
        run: |
          # INPUT -> Apps
          echo "apps=$(node tools/dev-scripts/cmd-get-build-projects.js) ${{inputs.apps}}" >> $GITHUB_OUTPUT

          # INPUT - Sha
          if [[ "${{inputs.sha}}" == "" ]]; then
            echo "sha=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
          else
            echo "sha=${{ inputs.sha }}" >> $GITHUB_OUTPUT
          fi

          # INPUT - Branch
          echo "branch=${{ github.head_ref || github.ref_name }}" >> $GITHUB_OUTPUT
      - name: Print inputs
        run: |
          echo "APPS: ${{ steps.generate-inputs.outputs.apps }}"
          echo "SHA: ${{ steps.generate-inputs.outputs.sha }}"
          echo "BRANCH: ${{ steps.generate-inputs.outputs.branch }}"
    outputs:
      apps: ${{ steps.generate-inputs.outputs.apps }}
      sha: ${{ steps.generate-inputs.outputs.sha }}
      branch: ${{ steps.generate-inputs.outputs.branch }}
  build:
    runs-on: ubuntu-latest
    needs: [set-inputs]
    if: ${{ fromJson(needs.set-inputs.outputs.apps)[0] }}
    strategy:
      max-parallel: 4
      matrix:
        node: ["16.17.0"]
        projectName: ${{fromJson(needs.set-inputs.outputs.apps)}}
    env:
      NODE: ${{ matrix.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.set-inputs.outputs.sha }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: "7.x"
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm nx run ${{ matrix.projectName }}:build
    # If the branch is
    # main: Trigger a deployment flow for the affected apps on Azure Pipelines. Require approval for deployment. Deployment can only be to QA or PROD from here
    # release OR *: Apply the k8 template for the affected app directly to DEV.
