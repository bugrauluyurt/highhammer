name: build

on:
  workflow_dispatch:
    inputs:
      # Sha: Git sha. If not provided the system will default to the HEAD of the branch
      sha:
        description: 'SHA'
        required: false
      # Apps: Array of build required apps. Ex: ['client-app', 'api-core']. Empty array creates images for all services.
      apps:
        description: 'Apps'
        default: '[]'
        required: false

jobs:
  print-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Print inputs
        run: |
          echo "BRANCH: $BRANCH"
          echo "SHA: $SHA"
          echo "APPS: $APPS"
        env:
          BRANCH: ${{ github.head_ref || github.ref_name }}
          SHA: ${{ inputs.sha }}
          APPS: ${{ inputs.apps }}
  get-inputs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.17.0"
      - name: Set inputs
        id: set-inputs
        run: |
          # INPUT -> Apps
          if [[ "${{inputs.apps}}" == "[]" ]]; then
            # Get all apps from the workspace and set it as affected-apps
            echo "apps=$(node tools/dev-scripts/cmd-get-workspace-projects.js)" >> $GITHUB_OUTPUT
          else
            echo "apps=${{ inputs.apps }}" >> $GITHUB_OUTPUT
          fi

          # INPUT - Sha
          if [[ "${{inputs.sha}}" == "" ]]; then
            echo "sha=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
          else
            echo "sha=${{ inputs.sha }}" >> $GITHUB_OUTPUT
          fi

          # INPUT - Branch
          echo "branch=${{ github.head_ref || github.ref_name }}" >> $GITHUB_OUTPUT
      - name: Log inputs
        run: |
          echo "APPS: ${{ steps.get-inputs.outputs.apps }}"
          echo "SHA: ${{ steps.get-inputs.outputs.sha }}"
          echo "BRANCH: ${{ steps.get-inputs.outputs.branch }}"
    outputs:
      apps: ${{ steps.get-inputs.outputs.apps }}
      sha: ${{ steps.get-inputs.outputs.sha }}
      branch: ${{ steps.get-inputs.outputs.branch }}
    # If the branch is
    # main: Trigger a deployment flow for the affected apps on Azure Pipelines. Require approval for deployment. Deployment can only be to QA or PROD from here
    # release OR *: Apply the k8 template for the affected app directly to DEV.
